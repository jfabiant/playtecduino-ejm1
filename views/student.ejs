<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>Blockly Demo: Mirrored Blockly</title>
  <script src="/blockly_compressed.js"></script>
  <script src="/blocks_compressed.js"></script>
  <script src="/msg/js/en.js"></script>
  <script src="/jquery-3.3.1.min.js"></script>
  <style>
    body {
      background-color: #fff;
      font-family: sans-serif;
    }
    h1 {
      font-weight: normal;
      font-size: 140%;
    }
  </style>
</head>
<body>

  <table width="100%">
    <tr>
      <td>
        <div id="secondaryDiv" style="height: 480px; width: 1000px;"></div>
      </td>
    </tr>
  </table>

  <xml id="toolbox" style="display: none">
    <block type="controls_if"></block>
    <block type="logic_compare"></block>
    <block type="controls_repeat_ext"></block>
    <block type="math_number">
      <field name="NUM">123</field>
    </block>
    <block type="math_arithmetic"></block>
    <block type="text"></block>
    <block type="text_print"></block>
    <block type="variables_get"><field name="VAR">i</field></block>
    <block type="variables_get"><field name="VAR">j</field></block>
    <block type="variables_get"><field name="VAR">k</field></block>
  </xml>

  <script src="/socket.io/socket.io.js"></script>
  <script>

  $(document).ready(function() {
    
    var socket = io();
    var secondaryWorkspace;
    var json = [{}];
    
    // Inyecto el segundo espacio de trabajo.
    secondaryWorkspace = Blockly.inject('secondaryDiv',
    {media: '../../media/',
    readOnly: true});

    socket.on('permiso', function(data){

      console.log(data.message)

      if(data.message) {
        
        // Inyecto el segundo espacio de trabajo.
        secondaryWorkspace = Blockly.inject('secondaryDiv',
        {media: '../../media/',
        readOnly: true});
        
      } else {
        
        /* Inyecto el segundo espacio de trabajo.
        secondaryWorkspace = Blockly.inject('secondaryDiv',
        {media: '../../media/',
        toolbox: document.getElementById('toolbox')});

         secondaryWorkspace.addChangeListener(mirrorEvent);
         function mirrorEvent(primaryEvent) {
          if (primaryEvent.type == Blockly.Events.UI) {
            return;  // No reflejar eventos de interfaz de usuario.
          }
        } */
        
      }
    });

    socket.on('new_message', function(data){
        //console.log(data.message)
        $.get("/api-bloques/", function(b){
          json = b.toSource();
        });
        
        console.log(json)

        // Convierte a JSON de nuevo en un evento, luego ejec√∫telo.
        var secondaryEvent = Blockly.Events.fromJson(json, secondaryWorkspace);
        secondaryEvent.run(true);
    });
});
</script>

</body>
</html>
